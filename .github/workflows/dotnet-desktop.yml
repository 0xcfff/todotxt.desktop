# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow builds, tests, and validates the TodoTxt.Desktop Avalonia application
# across Windows, macOS, and Linux platforms.
#
# The workflow ensures cross-platform compatibility and runs comprehensive tests
# for the Avalonia UI migration from the original WPF application.

name: TodoTxt.Desktop Cross-Platform CI

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        configuration: [Release]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build, test, and collect coverage using Makefile
      run: make build test coverage CONFIGURATION=${{ matrix.configuration }}

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.configuration }}
        path: reports/coverage/
        retention-days: 1

  coverage-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download all coverage artifacts
      uses: actions/download-artifact@v4
      with:
        path: coverage-artifacts/

    - name: Install dotnet-coverage tool
      run: dotnet tool install -g dotnet-coverage

    - name: Merge coverage reports
      run: |
        mkdir -p merged-coverage
        dotnet coverage merge --reports "coverage-artifacts/**/coverage.cobertura.xml" -f cobertura -o merged-coverage/coverage.xml

    - name: Generate consolidated coverage report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: merged-coverage/coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage to build Run Summary
      if: always()
      run: |
        echo "## Code Coverage Results" >> $GITHUB_STEP_SUMMARY
        cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

    - name: Add Coverage PR Comment
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2  
      with:
        recreate: true
        path: code-coverage-results.md
