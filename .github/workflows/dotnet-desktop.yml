# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow builds, tests, and validates the TodoTxt.Desktop Avalonia application
# across Windows, macOS, and Linux platforms.
#
# The workflow ensures cross-platform compatibility and runs comprehensive tests
# for the Avalonia UI migration from the original WPF application.

name: TodoTxt.Desktop Cross-Platform CI

on:
  push:
    branches: [ "main", "feature/avalonia-migration" ]
  pull_request:
    branches: [ "main", "feature/avalonia-migration" ]

jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        configuration: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: |
        dotnet restore src/TodoTxt.Lib/ToDoLib.csproj
        dotnet restore src/TodoTxt.Shared/TodoTxt.Shared.csproj
        dotnet restore src/TodoTxt.Platform/TodoTxt.Platform.csproj
        dotnet restore src/TodoTxt.Avalonia/TodoTxt.Avalonia.csproj
        dotnet restore src/TodoTxt.Lib.Tests/ToDoTests.csproj
        dotnet restore src/TodoTxt.Avalonia.Tests/TodoTxt.Avalonia.Tests.csproj

    - name: Build cross-platform projects
      run: |
        dotnet build src/TodoTxt.Lib/ToDoLib.csproj --configuration ${{ matrix.configuration }} --no-restore
        dotnet build src/TodoTxt.Shared/TodoTxt.Shared.csproj --configuration ${{ matrix.configuration }} --no-restore
        dotnet build src/TodoTxt.Platform/TodoTxt.Platform.csproj --configuration ${{ matrix.configuration }} --no-restore
        dotnet build src/TodoTxt.Avalonia/TodoTxt.Avalonia.csproj --configuration ${{ matrix.configuration }} --no-restore
        dotnet build src/TodoTxt.Lib.Tests/ToDoTests.csproj --configuration ${{ matrix.configuration }} --no-restore
        dotnet build src/TodoTxt.Avalonia.Tests/TodoTxt.Avalonia.Tests.csproj --configuration ${{ matrix.configuration }} --no-restore

    - name: Run core library tests
      run: dotnet test src/TodoTxt.Lib.Tests/ToDoTests.csproj --configuration ${{ matrix.configuration }} --no-build --logger "console;verbosity=normal"

    - name: Run Avalonia tests
      run: dotnet test src/TodoTxt.Avalonia.Tests/TodoTxt.Avalonia.Tests.csproj --configuration ${{ matrix.configuration }} --no-build --logger "console;verbosity=normal"

    - name: Test Avalonia application build
      run: dotnet build src/TodoTxt.Avalonia/TodoTxt.Avalonia.csproj --configuration ${{ matrix.configuration }} --no-restore

    - name: Collect test coverage
      if: matrix.configuration == 'Debug'
      run: |
        dotnet test src/TodoTxt.Lib.Tests/ToDoTests.csproj --configuration Debug --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
        dotnet test src/TodoTxt.Avalonia.Tests/TodoTxt.Avalonia.Tests.csproj --configuration Debug --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Upload coverage reports
      if: matrix.configuration == 'Debug'
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage
        flags: ${{ matrix.os }}
        name: codecov-${{ matrix.os }}-${{ matrix.configuration }}

