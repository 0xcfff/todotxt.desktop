---
description: Task Implementation
globs:
alwaysApply: false
---

# Task Implementation Rule

## Overview
This rule guides agents through systematic implementation of tasks following the documented plan step-by-step.

## Prerequisites
- `tasks/{task_name}/implementation.md` must exist and be complete
- User has approved the implementation plan

## Branch Management
**CRITICAL**: Before any code changes:
1. Check current git branch
2. If on `main`/`master` or branch doesn't match planned changes:
   - Notify user about current branch
   - Suggest creating new branch with logical name
   - Wait for user confirmation
   - Create branch only after user approval

## Implementation Process

### Step-by-Step Execution
1. **Load Plan**: Read `tasks/{task_name}/implementation.md`
2. **Follow Hierarchy**: Work through phases in order, then steps within each phase
3. **Work on First Incomplete Step**: 
   - Identify first step not marked as completed
   - Complete all tasks within that step sequentially
   - Think before implementing each task
   - Mark tasks as completed `[x]` in real-time
4. **Step Completion**: Mark step as completed when all tasks done
5. **Milestone Reporting**: After each step, STOP and provide:
   - Summary of accomplishments
   - Any deviations or issues
   - Confirmation before proceeding

### Plan Adherence
- **Follow documented plan exactly** unless deviations necessary
- If deviation needed:
  - Explain why planned approach won't work
  - Propose alternative approach
  - Ask user for approval
  - Update implementation plan

### Documentation
- Update `tasks/{task_name}/implementation.md` in real-time:
  - Mark completed tasks with `[x]`
  - Mark completed steps with `[x]`
  - Add notes about deviations
- Create `tasks/{task_name}/changes.md` documenting:
  - Files modified
  - Key changes made
  - Decisions made

## Validation
After completing all steps:
1. **Identify validation opportunities**:
   - Can changes be compiled/built?
   - Are there existing tests to run?
   - Can functionality be manually tested?
2. **Perform validation**:
   - Run builds, tests, or checks
   - Verify functionality works
   - Check for regressions
3. **Handle failures**:
   - Ask user if they want help fixing issues
   - Respect user's choice if they decline

## Success Criteria
Implementation complete when:
- All steps marked complete in implementation plan
- All planned code changes made
- Validation passes (if applicable)
- Documentation updated
- User confirms satisfaction
